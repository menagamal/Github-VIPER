//
//  FavouritePresenter.swift
//  GithubVIPER
//
//  Created Mena Gamal on 8/15/20.
//  Copyright © 2020 Mena Gamal. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class FavouritePresenter: BasePresenter,FavouritePresenterProtocol {
    
    weak internal var view: FavouriteViewProtocol?
    
    var interactor: FavouriteInteractorInputProtocol?
    
    private let router: FavouriteRouterProtocol
    
    private var dataSource:RepoCellDataSource?
    
    init(view: FavouriteViewProtocol, interactor: FavouriteInteractorInputProtocol?, router: FavouriteRouterProtocol) {
        self.view = view
        self.interactor = interactor
        self.router = router
    }
    func loadAllFavItems() {
        interactor?.loadUserFavItems()
    }
}

extension FavouritePresenter: FavouriteInteractorOutputProtocol {
    func didLoadFavItems(items: [Repos]) {
        guard let view =  self.view else {
            return
        }
        dataSource = RepoCellDataSource(delegate: self, tableView: view.favTable)
        
        dataSource?.reloadWithData(repos: items)
    }
    
}

extension FavouritePresenter:RepoCellDataSourceDelegate {
    func didSelected(repo: Repos) {
        self.router.showDetails(with: repo)
    }
    
    func toggleToFavourite(repo: Repos) {
        guard let id = repo.id else {
            return
        }
        if CacheHandler.ids.contains(id) {
            let _ = CacheHandler.shared.deleteObject(object: repo)
        } else {
            let _ = CacheHandler.shared.SaveData(object: repo)
        }
        interactor?.loadUserFavItems()
    }
    func loadNextPage() {
        
    }
    
    
}
